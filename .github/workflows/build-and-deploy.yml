name: CI/CD Process
on:
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ windows-2022, macos-14, ubuntu-22.04 ]
    runs-on: ${{ matrix.os }}
    concurrency:
      group: build-${{ github.workflow }}-${{ matrix.os }}-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: DanySK/action-checkout@0.2.20
      - name: Test
        run: ./gradlew test
  release:
    concurrency:
      # Only one release job at a time. Strictly sequential.
      group: release-${{ github.workflow }}-${{ github.event.number || github.ref }}
    needs:
      - build
    runs-on: ubuntu-latest
    if: >-
      !github.event.repository.fork
      && (
        github.event_name != 'pull_request'
        || github.event.pull_request.head.repo.full_name == github.repository
      )
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.0
        with:
          token: ${{ secrets.GH_TOKEN }}
      - name: Find the version of Node from package.json
        id: node-version
        run: echo "version=$(jq -r .engines.node package.json)" >> $GITHUB_OUTPUT
      - name: Install Node
        uses: actions/setup-node@v4.0.4
        with:
          node-version: ${{ steps.node-version.outputs.version }}
      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npm install
          npx semantic-release
  success:
    runs-on: ubuntu-24.04
    needs:
      - release
      - build
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
